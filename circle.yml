# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cypress/base:8
      - image: circleci/mongo:3

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-test-dependencies-{{ checksum "package.json" }}

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-test-dependencies-{{ checksum "package.json" }}

      - run: npm run eslint

### SHARED PACKAGE
      - restore_cache:
          keys:
            - npm-server-deps-{{ checksum "./shared/package.json" }}

      - run:
          name: Install shared related packages
          working_directory: shared/
          command: npm install

      - save_cache:
          key: npm-server-deps-{{ checksum "./shared/package.json" }}
          paths:
            - shared/node_modules

### SERVER PACKAGE
      - restore_cache:
          keys:
            - npm-server-deps-{{ checksum "./server/package.json" }}

      - run:
          name: Install server packages
          working_directory: server/
          command: npm install

      - save_cache:
          key: npm-server-deps-{{ checksum "./server/package.json" }}
          paths:
            - server/node_modules
      - run:
          name: Setup the database data
          command: npm run createDefaultDB
      - run:
           name: Start up the server
           working_directory: server/
           command: npm start
           background: true

### WEB PACKAGE
      - restore_cache:
          keys:
            - npm-web-deps-{{ checksum "./web/package.json" }}

      - run:
          name: Install web packages
          working_directory: web/
          command: npm install

      - save_cache:
          key: npm-web-deps-{{ checksum "./web/package.json" }}
          paths:
            - web/node_modules

      - run:
          name: Wait for the Server to start up
          command: npx wait-on "http://localhost:8080/graphiql" -t 30000

      - run:
          name: Start up the Web Client
          working_directory: web/
          command: npm start
          background: true

### MOBILE PACKAGE
      - restore_cache:
          keys:
            - npm-mobile-deps-{{ checksum "./mobile/package.json" }}

      - run:
          name: Install mobile packages
          working_directory: mobile/
          command: npm install

      - save_cache:
          key: npm-mobile-deps-{{ checksum "./mobile/package.json" }}
          paths:
            - mobile/node_modules

### ALL TOGETHER
      - run: npm run eslint:all

      - run:
          name: Integration test for web/mobile/server
          command: npm run test:integration:all

      - run:
          name: End to end test
          command: npm run test:e2e:web

